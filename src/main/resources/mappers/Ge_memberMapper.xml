<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Ge_memberMapper">
	<!-- Beans 의 멤버변수 (property) 이름과 대상 테이블의 컬럼(column)을 연결한다. -->
	<resultMap type="kr.co.semo.model.Ge_member" id="ge_memberMap">
		<result property="id"			column="id"/>
		<result property="name"			column="name"/>
		<result property="email_id"		column="email_id"/>
		<result property="user_pw"		column="user_pw"/>
		<result property="tel_num"		column="tel_num"/>
		<result property="reg_date"		column="reg_date"/>
		<result property="recent_date"	column="recent_date"/>
	</resultMap>

	<!-- 데이터 저장 -->
	<insert id="insertItem" 
		parameterType="kr.co.semo.model.Ge_member" 
		useGeneratedKeys="true" 
		keyProperty="id">
		INSERT INTO ge_member (
			name, email_id, user_pw, tel_num, reg_date, recent_date
		) VALUES (
			#{name}, #{email_id}, #{user_pw}, #{tel_num}, #{reg_date}, #{recent_date}
		)
	</insert>
	
	<!-- 단일행 조회 -->
    <select id="selectItem"
        parameterType="kr.co.semo.model.Ge_member"
        resultMap="ge_memberMap">
        SELECT id, name, email_id, user_pw, tel_num, reg_date, recent_date 
        FROM ge_member 
        WHERE id=#{id};
    </select>
    
	<!-- 다중행 조회 -->
	<select id="selectList"
	parameterType="kr.co.semo.model.Ge_member"
	resultMap="ge_memberMap">
			SELECT id, name, email_id, tel_num, reg_date, recent_date
			FROM ge_member
			<!-- 검색기능 -->
			<where>
			<if test="name != null and name != ''">
				name LIKE concat('%',#{name}, '%')
			</if>
			</where>
			ORDER BY id ASC
			<!-- 페이지 번호 구현 -->
			<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
			</if>	
	</select>
	
	<!-- 회원정보 수정  (id, pw 변경)-->
	<update id="updateItem"
		parameterType="kr.co.semo.model.Ge_member">
		UPDATE ge_member 
		SET name=#{name}, user_pw=#{user_pw}
		WHERE id=#{id}
	</update>
	
	<!-- 회원정보 수정 (Name만 변경) -->
	<update id="updateItemName"
		parameterType="kr.co.semo.model.Ge_member">
		UPDATE ge_member 
		SET name=#{name}
		WHERE id=#{id}
	</update>
	
	<!-- 최근 로그인 시간 변경 -->
	<update id="updateRecent"
		parameterType="kr.co.semo.model.Ge_member">
		UPDATE ge_member 
		SET recent_date=#{recent_date}
		WHERE id=#{id}
	</update>
	
	
	<!-- 로그인 회원 정보 조회 -->
	<select id="selectLoginUser" 
			parameterType="kr.co.semo.model.Ge_member"
			resultMap="ge_memberMap">
		SELECT id, name, email_id, user_pw, tel_num, reg_date, recent_date FROM ge_member
		<where>
			<if test="email_id != null and email_id != ''">
				email_id LIKE concat(#{email_id})
			</if>
			<if test="user_pw != null and user_pw != ''">
				AND user_pw LIKE concat(#{user_pw})
			</if> 
		</where>
	</select>
	
	<!-- 전체 페이지 조회 및 검색기능 결과 페이지 조회 -->
	<select id="selectCountAll"
	   parameterType="kr.co.semo.model.Ge_member" resultType="int">
		   SELECT COUNT(*)
		   FROM ge_member
		   <where>
		   <if test="name != null || name != ''">
		    name LIKE concat('%',#{name}, '%')
		   </if>
	   	   </where>
	</select>
	
	<!-- 이메일정보 조회 -->
   <select id="checkEmail2"
      parameterType="kr.co.semo.model.Ge_member" resultMap="ge_memberMap">
      <!-- parameterType 은 들어올 때 값, resultMap은 내보낼 때 값 -->
      SELECT email_id FROM ge_member
      WHERE email_id=#{email_id};
   </select>

   <!-- 비밀번호 갱신을 위한 기능 정의 -->
   <update id="updatePassword2"
      parameterType="kr.co.semo.model.Ge_member">
      UPDATE ge_member SET user_pw=#{user_pw}
      WHERE
      email_id=#{email_id}
   </update>
	
	<!-- 회원 삭제 -->
	<delete id="deleteItem"
		parameterType="kr.co.semo.model.Ge_member">
		DELETE FROM ge_member WHERE id=#{id}
	</delete>
</mapper>